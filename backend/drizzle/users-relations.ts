import { relations } from 'drizzle-orm';
import { users } from './users';
import { apiTokens } from './api-tokens';
import { credentials } from './credentials';
import { organizations } from './organizations';
import { permissions } from './permissions';
import { reports } from './reports';
import { roles } from './roles';
import { rolesPermissions } from './roles-permissions';
import { scheduledReportsSubscriptions } from './scheduled-reports-subscriptions';
import { sessions } from './sessions';
import { timesheets } from './timesheets';
import { usersPermissions } from './users-permissions';
import { usersRoles } from './users-roles';
import { usersTerminals } from './users-terminals';
import { usersWorkSchedules } from './users-work-schedules';
import { workScheduleEntries } from './work-schedule-entries';
import { workSchedules } from './work-schedules';
import { reportsLogs } from './reports-logs';

export const usersRelations = relations(users, (helpers) => ({ api_tokens_created_byTousers: helpers.many(apiTokens, { relationName: 'api_tokens_created_byTousers' }), api_tokens_updated_byTousers: helpers.many(apiTokens, { relationName: 'api_tokens_updated_byTousers' }), credentials_created_byTousers: helpers.many(credentials, { relationName: 'credentials_created_byTousers' }), credentials_updated_byTousers: helpers.many(credentials, { relationName: 'credentials_updated_byTousers' }), organization_created_byTousers: helpers.many(organizations, { relationName: 'organization_created_byTousers' }), organization_updated_byTousers: helpers.many(organizations, { relationName: 'organization_updated_byTousers' }), permissions_permissions_updated_byTousers: helpers.many(permissions, { relationName: 'permissions_updated_byTousers' }), permissions_permissions_created_byTousers: helpers.many(permissions, { relationName: 'permissions_created_byTousers' }), reports_user_id: helpers.many(reports, { relationName: 'reports_user_id' }), roles_roles_created_byTousers: helpers.many(roles, { relationName: 'roles_created_byTousers' }), roles_roles_updated_byTousers: helpers.many(roles, { relationName: 'roles_updated_byTousers' }), roles_permissions_roles_permissions_created_byTousers: helpers.many(rolesPermissions, { relationName: 'roles_permissions_created_byTousers' }), roles_permissions_roles_permissions_updated_byTousers: helpers.many(rolesPermissions, { relationName: 'roles_permissions_updated_byTousers' }), scheduled_reports_subscription_users: helpers.many(scheduledReportsSubscriptions, { relationName: 'Scheduled_reports_subscriptionToUsers' }), sessions: helpers.many(sessions, { relationName: 'sessions_users' }), timesheet_users: helpers.many(timesheets, { relationName: 'TimesheetToUsers' }), users_permissions_usersTousers_permissions_created_by: helpers.many(usersPermissions, { relationName: 'usersTousers_permissions_created_by' }), users_permissions_usersTousers_permissions_user_id: helpers.many(usersPermissions, { relationName: 'usersTousers_permissions_user_id' }), users_permissions_usersTousers_permissions_updated_by: helpers.many(usersPermissions, { relationName: 'usersTousers_permissions_updated_by' }), users_roles_usersTousers_roles_created_by: helpers.many(usersRoles, { relationName: 'usersTousers_roles_created_by' }), users_roles_usersTousers_roles_updated_by: helpers.many(usersRoles, { relationName: 'usersTousers_roles_updated_by' }), users_roles_usersTousers_roles_user_id: helpers.many(usersRoles, { relationName: 'usersTousers_roles_user_id' }), users_terminals: helpers.many(usersTerminals, { relationName: 'UsersToUsers_terminals' }), users_work_schedules: helpers.many(usersWorkSchedules, { relationName: 'UsersToUsers_work_schedules' }), work_schedule_entries_created_byTousers: helpers.many(workScheduleEntries, { relationName: 'work_schedule_entries_created_byTousers' }), work_schedule_entries_updated_byTousers: helpers.many(workScheduleEntries, { relationName: 'work_schedule_entries_updated_byTousers' }), work_schedule_entries_users: helpers.many(workScheduleEntries, { relationName: 'work_schedule_entries_users' }), work_schedules_created_byTousers: helpers.many(workSchedules, { relationName: 'work_schedules_created_byTousers' }), work_schedules_updated_byTousers: helpers.many(workSchedules, { relationName: 'work_schedules_updated_byTousers' }), reports_logs_user_id: helpers.many(reportsLogs, { relationName: 'reports_logs_user_id' }) }));